
package itst.dk;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import oio.sagdok._2_0.LaesInputType;
import oio.sagdok._2_0.ListInputType;
import oio.sagdok._2_0.SoegOutputType;
import oio.sagdok.person._1_0.GetUuidArrayOutputType;
import oio.sagdok.person._1_0.GetUuidOutputType;
import oio.sagdok.person._1_0.LaesOejebliksbilledeInputType;
import oio.sagdok.person._1_0.LaesOutputType;
import oio.sagdok.person._1_0.LaesPeriodInputType;
import oio.sagdok.person._1_0.ListOejebliksbilledeInputType;
import oio.sagdok.person._1_0.ListOutputType;
import oio.sagdok.person._1_0.ListPeriodInputType;
import oio.sagdok.person._1_0.SoegInputType;
import oio.sagdok.person._1_0.SoegListOutputType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PartSoap12", targetNamespace = "http://dk.itst")
@XmlSeeAlso({
    dk.oio.rep.bbr_dk.xml.schemas._2006._09._30.ObjectFactory.class,
    dk.oio.rep.capevo_dk.xml.schemas._2007._08._01.ObjectFactory.class,
    dk.oio.rep.cpr_dk.xml.schemas._2007._01._02.ObjectFactory.class,
    dk.oio.rep.cpr_dk.xml.schemas._2008._05._01.ObjectFactory.class,
    dk.oio.rep.cpr_dk.xml.schemas.core._2005._03._18.ObjectFactory.class,
    dk.oio.rep.ebxml.xml.schemas.dkcc._2003._02._13.ObjectFactory.class,
    dk.oio.rep.ebxml.xml.schemas.dkcc._2005._03._15.ObjectFactory.class,
    dk.oio.rep.ebxml.xml.schemas.dkcc._2005._05._13.ObjectFactory.class,
    dk.oio.rep.ebxml.xml.schemas.dkcc._2005._05._19.ObjectFactory.class,
    dk.oio.rep.ebxml.xml.schemas.dkcc._2006._01._03.ObjectFactory.class,
    dk.oio.rep.ebxml.xml.schemas.dkcc._2006._01._23.ObjectFactory.class,
    dk.oio.rep.itst_dk.xml.schemas._2005._01._10.ObjectFactory.class,
    dk.oio.rep.itst_dk.xml.schemas._2005._02._22.ObjectFactory.class,
    dk.oio.rep.itst_dk.xml.schemas._2006._01._17.ObjectFactory.class,
    dk.oio.rep.vejsektoren_dk.core.schemas.xml._2007._03._31.ObjectFactory.class,
    dk.oio.rep.xkom_dk.xml.schemas._2005._03._15.ObjectFactory.class,
    dk.oio.rep.xkom_dk.xml.schemas._2006._01._06.ObjectFactory.class,
    itst.dk.ObjectFactory.class,
    oio.dkal._1_0.ObjectFactory.class,
    oio.sagdok._1_0.ObjectFactory.class,
    oio.sagdok._2_0.ObjectFactory.class,
    oio.sagdok.part._1_0.ObjectFactory.class,
    oio.sagdok.person._1_0.ObjectFactory.class
})
public interface PartSoap12 {


    /**
     * Finds and returns a single person object. It will return the latest registration within the specified range. It first looks in the local database, and attempts external data providers if no data is found locally.
     * <br><br><b><u>Signature:</u></b>
     * <br>LaesOutputType Read(LaesInputType input)
     * <br><br><b><u>Parameter Description:</u></b>
     * <br>input: Contains the person UUID and (optionally) requested registration & effect date ranges.
     * <br><br><b><u>Return value copmponents:</u></b>
     * <br>StandardRetur: Detailed status code and text.
     * <br>LaesResultat: If succeeded, its Item property will be a Registrering object with the found person registration. 
     * <br>If failed, contains null.
     * <br><br><b><u>Review:</u></b>
     * <table>
     * <tr><td width='30%'>2011-03-06, CPR Broker </td><td width='10%'></td><td width='60%'>Part release.</td></tr>
     * </table>
     * <br>==============================
     * 
     * 
     * @param laesInput
     * @return
     *     returns oio.sagdok.person._1_0.LaesOutputType
     */
    @WebMethod(operationName = "Read", action = "http://dk.itst/Read")
    @WebResult(name = "LaesOutput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
    @RequestWrapper(localName = "Read", targetNamespace = "http://dk.itst", className = "itst.dk.Read")
    @ResponseWrapper(localName = "ReadResponse", targetNamespace = "http://dk.itst", className = "itst.dk.ReadResponse")
    public LaesOutputType read(
        @WebParam(name = "LaesInput", targetNamespace = "urn:oio:sagdok:2.0.0")
        LaesInputType laesInput);

    /**
     * This method is the same as Read, except that it does not look in the broker's local database to load the data. Instead, it queries external data providers directly for the data.
     * <br><br><b><u>Signature:</u></b>
     * <br>LaesOutputType RefreshRead(LaesInputType input)
     * <br><br><b><u>Parameter Description:</u></b>
     * <br>input: Contains the person UUID and (optionally) requested registration & effect date ranges. Only the UUID matters here.
     * <br><br><b><u>Return value copmponents:</u></b>
     * <br>StandardRetur: Detailed status code and text.
     * <br>LaesResultat: Read operation result.
     * <br><br><b><u>Review:</u></b>
     * <table>
     * <tr><td width='30%'>2011-03-06, CPR Broker </td><td width='10%'></td><td width='60%'>Part release.</td></tr>
     * </table>
     * <br>==============================
     * 
     * 
     * @param laesInput
     * @return
     *     returns oio.sagdok.person._1_0.LaesOutputType
     */
    @WebMethod(operationName = "RefreshRead", action = "http://dk.itst/RefreshRead")
    @WebResult(name = "LaesOutput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
    @RequestWrapper(localName = "RefreshRead", targetNamespace = "http://dk.itst", className = "itst.dk.RefreshRead")
    @ResponseWrapper(localName = "RefreshReadResponse", targetNamespace = "http://dk.itst", className = "itst.dk.RefreshReadResponse")
    public LaesOutputType refreshRead(
        @WebParam(name = "LaesInput", targetNamespace = "urn:oio:sagdok:2.0.0")
        LaesInputType laesInput);

    /**
     * Finds and returns several person objects that match the ID List supplied. Just like Read, every person is first attempted locally, and if not found, an external data provider is attempted.
     * <br><br><b><u>Signature:</u></b>
     * <br>ListOutputType1 List(ListInputType input)
     * <br><br><b><u>Parameter Description:</u></b>
     * <br>input: Contains the UUIDs of the person objects to be retrieved.
     * <br><br><b><u>Return value copmponents:</u></b>
     * <br>StandardRetur: Detailed status code and text.
     * <br>LaesResultat: Array of Read operation results. In case of full or partial success, each element at index i in the array corresponds to the UUID at index i in the input array. Contains null in case of failure.
     * <br><br><b><u>Review:</u></b>
     * <table>
     * <tr><td width='30%'>2011-03-06, CPR Broker </td><td width='10%'></td><td width='60%'>Part release.</td></tr>
     * <tr><td width='30%'>2011-11-29, CPR Broker </td><td width='10%'></td><td width='60%'>Allowed partial success.</td></tr>
     * </table>
     * <br>==============================
     * 
     * 
     * @param listInput
     * @return
     *     returns oio.sagdok.person._1_0.ListOutputType
     */
    @WebMethod(operationName = "List", action = "http://dk.itst/List")
    @WebResult(name = "ListOutput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
    @RequestWrapper(localName = "List", targetNamespace = "http://dk.itst", className = "itst.dk.List")
    @ResponseWrapper(localName = "ListResponse", targetNamespace = "http://dk.itst", className = "itst.dk.ListResponse")
    public ListOutputType list(
        @WebParam(name = "ListInput", targetNamespace = "urn:oio:sagdok:2.0.0")
        ListInputType listInput);

    /**
     * Searches the local database for matching persons. The current implementation can only search by UUID, CPR number, first name, middle  name or last name. Search is performed for whole words only.
     * <br><br><b><u>Signature:</u></b>
     * <br>SoegOutputType Search(SoegInputType1 searchCriteria)
     * <br><br><b><u>Parameter Description:</u></b>
     * <br>searchCriteria: The search criteria. 
     * <br><br><b><u>Return value copmponents:</u></b>
     * <br>StandardRetur: Detailed status code and text.
     * <br>Idliste: List of UUID's of the found persons. You can then call Read or List to get detailed data.
     * <br><br><b><u>Review:</u></b>
     * <table>
     * <tr><td width='30%'>2011-03-06, CPR Broker </td><td width='10%'></td><td width='60%'>Part release.</td></tr>
     * </table>
     * <br>==============================
     * 
     * 
     * @param soegInput
     * @return
     *     returns oio.sagdok._2_0.SoegOutputType
     */
    @WebMethod(operationName = "Search", action = "http://dk.itst/Search")
    @WebResult(name = "SoegOutput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
    @RequestWrapper(localName = "Search", targetNamespace = "http://dk.itst", className = "itst.dk.Search")
    @ResponseWrapper(localName = "SearchResponse", targetNamespace = "http://dk.itst", className = "itst.dk.SearchResponse")
    public SoegOutputType search(
        @WebParam(name = "SoegInput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
        SoegInputType soegInput);

    /**
     * Searches the local database for matching persons. The current implementation can only search by UUID, CPR number, first name, middle  name or last name. Search is performed for whole words only.
     * <br><br><b><u>Signature:</u></b>
     * <br>SoegOutputType Search(SoegInputType1 searchCriteria)
     * <br><br><b><u>Parameter Description:</u></b>
     * <br>searchCriteria: The search criteria. 
     * <br><br><b><u>Return value copmponents:</u></b>
     * <br>StandardRetur: Detailed status code and text.
     * <br>Idliste: List of UUID's of the found persons. You can then call Read or List to get detailed data.
     * <br><br><b><u>Review:</u></b>
     * <table>
     * <tr><td width='30%'>2011-03-06, CPR Broker </td><td width='10%'></td><td width='60%'>Part release.</td></tr>
     * </table>
     * <br>==============================
     * 
     * 
     * @param soegInput
     * @return
     *     returns oio.sagdok.person._1_0.SoegListOutputType
     */
    @WebMethod(operationName = "SearchList", action = "http://dk.itst/SearchList")
    @WebResult(name = "SoegListOutput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
    @RequestWrapper(localName = "SearchList", targetNamespace = "http://dk.itst", className = "itst.dk.SearchList")
    @ResponseWrapper(localName = "SearchListResponse", targetNamespace = "http://dk.itst", className = "itst.dk.SearchListResponse")
    public SoegListOutputType searchList(
        @WebParam(name = "SoegInput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
        SoegInputType soegInput);

    /**
     * Gets the person's UUID from his CPR number. If no mapping is found locally, it calls the UUID assignment authority (PersonMaster service).
     * <br><br><b><u>Signature:</u></b>
     * <br>GetUuidOutputType GetUuid(string cprNumber)
     * <br><br><b><u>Parameter Description:</u></b>
     * <br>cprNumber: CPR number of person needed.
     * <br><br><b><u>Return value copmponents:</u></b>
     * <br>StandardRetur: Detailed status code and text.
     * <br>UUID: The person's UUID.
     * <br><br><b><u>Review:</u></b>
     * <table>
     * <tr><td width='30%'>2011-03-06, CPR Broker </td><td width='10%'></td><td width='60%'>Part release.</td></tr>
     * </table>
     * <br>==============================
     * 
     * 
     * @param cprNumber
     * @return
     *     returns oio.sagdok.person._1_0.GetUuidOutputType
     */
    @WebMethod(operationName = "GetUuid", action = "http://dk.itst/GetUuid")
    @WebResult(name = "GetUuidOutput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
    @RequestWrapper(localName = "GetUuid", targetNamespace = "http://dk.itst", className = "itst.dk.GetUuid")
    @ResponseWrapper(localName = "GetUuidResponse", targetNamespace = "http://dk.itst", className = "itst.dk.GetUuidResponse")
    public GetUuidOutputType getUuid(
        @WebParam(name = "cprNumber", targetNamespace = "http://dk.itst")
        String cprNumber);

    /**
     * Gets persons' UUIDs from their CPR numbers. If no mapping is found locally, it calls the UUID assignment authority (PersonMaster service).
     * <br><br><b><u>Signature:</u></b>
     * <br>GetUuidOutputType GetUuid(string[] cprNumberArray)
     * <br><br><b><u>Parameter Description:</u></b>
     * <br>cprNumberArray: CPR numbers of persons needed.
     * <br><br><b><u>Return value copmponents:</u></b>
     * <br>StandardRetur: Detailed status code and text.
     * <br>UUID: The persons' UUIDs.
     * <br><br><b><u>Review:</u></b>
     * <table>
     * <tr><td width='30%'>2012-11-25, CPR Broker </td><td width='10%'></td><td width='60%'>Part release.</td></tr>
     * </table>
     * <br>==============================
     * 
     * 
     * @param cprNumberArray
     * @return
     *     returns oio.sagdok.person._1_0.GetUuidArrayOutputType
     */
    @WebMethod(operationName = "GetUuidArray", action = "http://dk.itst/GetUuidArray")
    @WebResult(name = "GetUuidArrayResult", targetNamespace = "http://dk.itst")
    @RequestWrapper(localName = "GetUuidArray", targetNamespace = "http://dk.itst", className = "itst.dk.GetUuidArray")
    @ResponseWrapper(localName = "GetUuidArrayResponse", targetNamespace = "http://dk.itst", className = "itst.dk.GetUuidArrayResponse")
    public GetUuidArrayOutputType getUuidArray(
        @WebParam(name = "cprNumberArray", targetNamespace = "http://dk.itst")
        ArrayOfString cprNumberArray);

    /**
     * Gets a single snapshot of one person's CPR data
     * 
     * @param laesOejebliksbilledeInput
     * @return
     *     returns oio.sagdok.person._1_0.LaesOutputType
     */
    @WebMethod(operationName = "ReadSnapshot", action = "http://dk.itst/ReadSnapshot")
    @WebResult(name = "LaesOutput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
    @RequestWrapper(localName = "ReadSnapshot", targetNamespace = "http://dk.itst", className = "itst.dk.ReadSnapshot")
    @ResponseWrapper(localName = "ReadSnapshotResponse", targetNamespace = "http://dk.itst", className = "itst.dk.ReadSnapshotResponse")
    public LaesOutputType readSnapshot(
        @WebParam(name = "LaesOejebliksbilledeInput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
        LaesOejebliksbilledeInputType laesOejebliksbilledeInput);

    /**
     * Gets all snapshots of one person's CPR data that fall between the input effect dates
     * 
     * @param laesPeriodInput
     * @return
     *     returns oio.sagdok.person._1_0.LaesOutputType
     */
    @WebMethod(operationName = "ReadPeriod", action = "http://dk.itst/ReadPeriod")
    @WebResult(name = "LaesOutput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
    @RequestWrapper(localName = "ReadPeriod", targetNamespace = "http://dk.itst", className = "itst.dk.ReadPeriod")
    @ResponseWrapper(localName = "ReadPeriodResponse", targetNamespace = "http://dk.itst", className = "itst.dk.ReadPeriodResponse")
    public LaesOutputType readPeriod(
        @WebParam(name = "LaesPeriodInput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
        LaesPeriodInputType laesPeriodInput);

    /**
     * Gets a single snapshot of the given persons' CPR data
     * 
     * @param listOejebliksbilledeInput
     * @return
     *     returns oio.sagdok.person._1_0.ListOutputType
     */
    @WebMethod(operationName = "ListSnapshot", action = "http://dk.itst/ListSnapshot")
    @WebResult(name = "ListOutput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
    @RequestWrapper(localName = "ListSnapshot", targetNamespace = "http://dk.itst", className = "itst.dk.ListSnapshot")
    @ResponseWrapper(localName = "ListSnapshotResponse", targetNamespace = "http://dk.itst", className = "itst.dk.ListSnapshotResponse")
    public ListOutputType listSnapshot(
        @WebParam(name = "ListOejebliksbilledeInput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
        ListOejebliksbilledeInputType listOejebliksbilledeInput);

    /**
     * Gets all snapshots of the given persons' CPR data that fall between the input effect dates
     * 
     * @param listPeriodInput
     * @return
     *     returns oio.sagdok.person._1_0.ListOutputType
     */
    @WebMethod(operationName = "ListPeriod", action = "http://dk.itst/ListPeriod")
    @WebResult(name = "ListOutput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
    @RequestWrapper(localName = "ListPeriod", targetNamespace = "http://dk.itst", className = "itst.dk.ListPeriod")
    @ResponseWrapper(localName = "ListPeriodResponse", targetNamespace = "http://dk.itst", className = "itst.dk.ListPeriodResponse")
    public ListOutputType listPeriod(
        @WebParam(name = "ListPeriodInput", targetNamespace = "urn:oio:sagdok:person:1.0.0")
        ListPeriodInputType listPeriodInput);

}
